security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Participant
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: participant_login
                check_path: participant_login
            logout:
                path: participant_logout
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                token_provider:
                    doctrine: true
        secured_area:
            form_login:
                enable_csrf: true
    role_hierarchy:
        ROLE_ADMIN:     ROLE_USER

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # Tout le monde peut accéder à la page de login.
        - { path: ^/participants/login, roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%' }
        - { path: ^/participants/logout, roles: IS_AUTHENTICATED, requires_channel: '%env(SECURE_SCHEME)%' }
        - { path: ^/reset-password, roles: PUBLIC_ACCESS, requires_channel: '%env(SECURE_SCHEME)%' }
        - { path: ^/participants/ajouter, roles: ROLE_ADMIN, requires_channel: '%env(SECURE_SCHEME)%' }
        - { path: ^/participants/profil, roles: ROLE_USER, requires_channel: '%env(SECURE_SCHEME)%' }
        - { path: ^/participants/gestion, roles: ROLE_ADMIN, requires_channel: '%env(SECURE_SCHEME)%'}
        - { path: ^/ville, roles: ROLE_ADMIN, requires_channel: '%env(SECURE_SCHEME)%' }
        # L'ensemble du site (hors page de login) est réservé aux utilisateurs connectés.
        - { path: ^/, roles: IS_AUTHENTICATED, requires_channel: '%env(SECURE_SCHEME)%' }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
